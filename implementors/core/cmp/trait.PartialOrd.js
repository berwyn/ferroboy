(function() {var implementors = {};
implementors["ferroboy"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"ferroboy/system/cpu/struct.Flags.html\" title=\"struct ferroboy::system::cpu::Flags\">Flags</a>&gt; for <a class=\"struct\" href=\"ferroboy/system/cpu/struct.Flags.html\" title=\"struct ferroboy::system::cpu::Flags\">Flags</a>","synthetic":false,"types":["ferroboy::system::cpu::Flags"]}];
implementors["libretro_backend"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_backend/enum.JoypadButton.html\" title=\"enum libretro_backend::JoypadButton\">JoypadButton</a>&gt; for <a class=\"enum\" href=\"libretro_backend/enum.JoypadButton.html\" title=\"enum libretro_backend::JoypadButton\">JoypadButton</a>","synthetic":false,"types":["libretro_backend::JoypadButton"]}];
implementors["libretro_sys"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.Region.html\" title=\"enum libretro_sys::Region\">Region</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.Region.html\" title=\"enum libretro_sys::Region\">Region</a>","synthetic":false,"types":["libretro_sys::Region"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.Language.html\" title=\"enum libretro_sys::Language\">Language</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.Language.html\" title=\"enum libretro_sys::Language\">Language</a>","synthetic":false,"types":["libretro_sys::Language"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.Key.html\" title=\"enum libretro_sys::Key\">Key</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.Key.html\" title=\"enum libretro_sys::Key\">Key</a>","synthetic":false,"types":["libretro_sys::Key"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.Mod.html\" title=\"enum libretro_sys::Mod\">Mod</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.Mod.html\" title=\"enum libretro_sys::Mod\">Mod</a>","synthetic":false,"types":["libretro_sys::Mod"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.HwRenderInterfaceType.html\" title=\"enum libretro_sys::HwRenderInterfaceType\">HwRenderInterfaceType</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.HwRenderInterfaceType.html\" title=\"enum libretro_sys::HwRenderInterfaceType\">HwRenderInterfaceType</a>","synthetic":false,"types":["libretro_sys::HwRenderInterfaceType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.LogLevel.html\" title=\"enum libretro_sys::LogLevel\">LogLevel</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.LogLevel.html\" title=\"enum libretro_sys::LogLevel\">LogLevel</a>","synthetic":false,"types":["libretro_sys::LogLevel"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.SensorAction.html\" title=\"enum libretro_sys::SensorAction\">SensorAction</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.SensorAction.html\" title=\"enum libretro_sys::SensorAction\">SensorAction</a>","synthetic":false,"types":["libretro_sys::SensorAction"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.CameraBuffer.html\" title=\"enum libretro_sys::CameraBuffer\">CameraBuffer</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.CameraBuffer.html\" title=\"enum libretro_sys::CameraBuffer\">CameraBuffer</a>","synthetic":false,"types":["libretro_sys::CameraBuffer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.RumbleEffect.html\" title=\"enum libretro_sys::RumbleEffect\">RumbleEffect</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.RumbleEffect.html\" title=\"enum libretro_sys::RumbleEffect\">RumbleEffect</a>","synthetic":false,"types":["libretro_sys::RumbleEffect"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.HwContextType.html\" title=\"enum libretro_sys::HwContextType\">HwContextType</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.HwContextType.html\" title=\"enum libretro_sys::HwContextType\">HwContextType</a>","synthetic":false,"types":["libretro_sys::HwContextType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"enum\" href=\"libretro_sys/enum.PixelFormat.html\" title=\"enum libretro_sys::PixelFormat\">PixelFormat</a>&gt; for <a class=\"enum\" href=\"libretro_sys/enum.PixelFormat.html\" title=\"enum libretro_sys::PixelFormat\">PixelFormat</a>","synthetic":false,"types":["libretro_sys::PixelFormat"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()